name: updateFwVersion on Merge

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request closing events for the list of branches
  pull_request:
    branches: 
      - master
      - develop
      - main
    types:
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      simulate_merged:
        description: 'Simulate a merged PR event'
        required: true
        default: 'false'

# allow actions to do a write
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "update_version"
  update_version:
    if: github.event.pull_request.merged == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python for the script
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        # No need to run items to navigate to the root of the repo as the action 
        # assumes it is there

      # Runs a single command using the runner's shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Run the script to edit a mock update file name
      - name: Run the script to edit a mock update file name
        run: |
          python updateFileName.py "configtest.h"

      # Commit and push changes
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add configtest.h  # Adjust the path to the file being updated
          git commit -m "Update version to $(date +'%Y.%m.%d.%H%M%S')"
          git push origin ${{ github.ref }}